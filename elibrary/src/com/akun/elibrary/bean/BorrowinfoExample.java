package com.akun.elibrary.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BorrowinfoExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	public BorrowinfoExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	protected BorrowinfoExample(BorrowinfoExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table dbo.borrowInfo
	 * @ibatorgenerated  Fri Apr 13 14:14:56 CST 2012
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andBorrowidIsNull() {
			addCriterion("borrowid is null");
			return this;
		}

		public Criteria andBorrowidIsNotNull() {
			addCriterion("borrowid is not null");
			return this;
		}

		public Criteria andBorrowidEqualTo(Integer value) {
			addCriterion("borrowid =", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidNotEqualTo(Integer value) {
			addCriterion("borrowid <>", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidGreaterThan(Integer value) {
			addCriterion("borrowid >", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidGreaterThanOrEqualTo(Integer value) {
			addCriterion("borrowid >=", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidLessThan(Integer value) {
			addCriterion("borrowid <", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidLessThanOrEqualTo(Integer value) {
			addCriterion("borrowid <=", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidIn(List values) {
			addCriterion("borrowid in", values, "borrowid");
			return this;
		}

		public Criteria andBorrowidNotIn(List values) {
			addCriterion("borrowid not in", values, "borrowid");
			return this;
		}

		public Criteria andBorrowidBetween(Integer value1, Integer value2) {
			addCriterion("borrowid between", value1, value2, "borrowid");
			return this;
		}

		public Criteria andBorrowidNotBetween(Integer value1, Integer value2) {
			addCriterion("borrowid not between", value1, value2, "borrowid");
			return this;
		}

		public Criteria andSidIsNull() {
			addCriterion("sid is null");
			return this;
		}

		public Criteria andSidIsNotNull() {
			addCriterion("sid is not null");
			return this;
		}

		public Criteria andSidEqualTo(Integer value) {
			addCriterion("sid =", value, "sid");
			return this;
		}

		public Criteria andSidNotEqualTo(Integer value) {
			addCriterion("sid <>", value, "sid");
			return this;
		}

		public Criteria andSidGreaterThan(Integer value) {
			addCriterion("sid >", value, "sid");
			return this;
		}

		public Criteria andSidGreaterThanOrEqualTo(Integer value) {
			addCriterion("sid >=", value, "sid");
			return this;
		}

		public Criteria andSidLessThan(Integer value) {
			addCriterion("sid <", value, "sid");
			return this;
		}

		public Criteria andSidLessThanOrEqualTo(Integer value) {
			addCriterion("sid <=", value, "sid");
			return this;
		}

		public Criteria andSidIn(List values) {
			addCriterion("sid in", values, "sid");
			return this;
		}

		public Criteria andSidNotIn(List values) {
			addCriterion("sid not in", values, "sid");
			return this;
		}

		public Criteria andSidBetween(Integer value1, Integer value2) {
			addCriterion("sid between", value1, value2, "sid");
			return this;
		}

		public Criteria andSidNotBetween(Integer value1, Integer value2) {
			addCriterion("sid not between", value1, value2, "sid");
			return this;
		}

		public Criteria andBorrowtimeIsNull() {
			addCriterion("borrowTime is null");
			return this;
		}

		public Criteria andBorrowtimeIsNotNull() {
			addCriterion("borrowTime is not null");
			return this;
		}

		public Criteria andBorrowtimeEqualTo(Date value) {
			addCriterion("borrowTime =", value, "borrowtime");
			return this;
		}
		public Criteria andBorrowtimeEqualTo(String nowDatetime) {
			addCriterion("borrowTime =", nowDatetime, "borrowtime");
			return this;
		}

		public Criteria andBorrowtimeNotEqualTo(Date value) {
			addCriterion("borrowTime <>", value, "borrowtime");
			return this;
		}

		public Criteria andBorrowtimeGreaterThan(Date value) {
			addCriterion("borrowTime >", value, "borrowtime");
			return this;
		}

		public Criteria andBorrowtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("borrowTime >=", value, "borrowtime");
			return this;
		}

		public Criteria andBorrowtimeLessThan(Date value) {
			addCriterion("borrowTime <", value, "borrowtime");
			return this;
		}

		public Criteria andBorrowtimeLessThanOrEqualTo(Date value) {
			addCriterion("borrowTime <=", value, "borrowtime");
			return this;
		}

		public Criteria andBorrowtimeIn(List values) {
			addCriterion("borrowTime in", values, "borrowtime");
			return this;
		}

		public Criteria andBorrowtimeNotIn(List values) {
			addCriterion("borrowTime not in", values, "borrowtime");
			return this;
		}

		public Criteria andBorrowtimeBetween(Date value1, Date value2) {
			addCriterion("borrowTime between", value1, value2, "borrowtime");
			return this;
		}

		public Criteria andBorrowtimeNotBetween(Date value1, Date value2) {
			addCriterion("borrowTime not between", value1, value2, "borrowtime");
			return this;
		}

		public Criteria andExpectedreturntimeIsNull() {
			addCriterion("expectedReturnTime is null");
			return this;
		}

		public Criteria andExpectedreturntimeIsNotNull() {
			addCriterion("expectedReturnTime is not null");
			return this;
		}

		public Criteria andExpectedreturntimeEqualTo(Date value) {
			addCriterion("expectedReturnTime =", value, "expectedreturntime");
			return this;
		}

		public Criteria andExpectedreturntimeNotEqualTo(Date value) {
			addCriterion("expectedReturnTime <>", value, "expectedreturntime");
			return this;
		}

		public Criteria andExpectedreturntimeGreaterThan(Date value) {
			addCriterion("expectedReturnTime >", value, "expectedreturntime");
			return this;
		}

		public Criteria andExpectedreturntimeGreaterThanOrEqualTo(Date value) {
			addCriterion("expectedReturnTime >=", value, "expectedreturntime");
			return this;
		}

		public Criteria andExpectedreturntimeLessThan(Date value) {
			addCriterion("expectedReturnTime <", value, "expectedreturntime");
			return this;
		}

		public Criteria andExpectedreturntimeLessThanOrEqualTo(Date value) {
			addCriterion("expectedReturnTime <=", value, "expectedreturntime");
			return this;
		}

		public Criteria andExpectedreturntimeIn(List values) {
			addCriterion("expectedReturnTime in", values, "expectedreturntime");
			return this;
		}

		public Criteria andExpectedreturntimeNotIn(List values) {
			addCriterion("expectedReturnTime not in", values, "expectedreturntime");
			return this;
		}

		public Criteria andExpectedreturntimeBetween(Date value1, Date value2) {
			addCriterion("expectedReturnTime between", value1, value2, "expectedreturntime");
			return this;
		}

		public Criteria andExpectedreturntimeNotBetween(Date value1, Date value2) {
			addCriterion("expectedReturnTime not between", value1, value2, "expectedreturntime");
			return this;
		}

		public Criteria andBorrownumIsNull() {
			addCriterion("borrownum is null");
			return this;
		}

		public Criteria andBorrownumIsNotNull() {
			addCriterion("borrownum is not null");
			return this;
		}

		public Criteria andBorrownumEqualTo(Integer value) {
			addCriterion("borrownum =", value, "borrownum");
			return this;
		}

		public Criteria andBorrownumNotEqualTo(Integer value) {
			addCriterion("borrownum <>", value, "borrownum");
			return this;
		}

		public Criteria andBorrownumGreaterThan(Integer value) {
			addCriterion("borrownum >", value, "borrownum");
			return this;
		}

		public Criteria andBorrownumGreaterThanOrEqualTo(Integer value) {
			addCriterion("borrownum >=", value, "borrownum");
			return this;
		}

		public Criteria andBorrownumLessThan(Integer value) {
			addCriterion("borrownum <", value, "borrownum");
			return this;
		}

		public Criteria andBorrownumLessThanOrEqualTo(Integer value) {
			addCriterion("borrownum <=", value, "borrownum");
			return this;
		}

		public Criteria andBorrownumIn(List values) {
			addCriterion("borrownum in", values, "borrownum");
			return this;
		}

		public Criteria andBorrownumNotIn(List values) {
			addCriterion("borrownum not in", values, "borrownum");
			return this;
		}

		public Criteria andBorrownumBetween(Integer value1, Integer value2) {
			addCriterion("borrownum between", value1, value2, "borrownum");
			return this;
		}

		public Criteria andBorrownumNotBetween(Integer value1, Integer value2) {
			addCriterion("borrownum not between", value1, value2, "borrownum");
			return this;
		}
	}
}