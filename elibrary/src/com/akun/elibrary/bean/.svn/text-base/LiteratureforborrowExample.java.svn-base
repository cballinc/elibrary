package com.akun.elibrary.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LiteratureforborrowExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	public LiteratureforborrowExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	protected LiteratureforborrowExample(LiteratureforborrowExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table dbo.literatureForBorrow
	 * @ibatorgenerated  Thu Apr 05 15:26:19 CST 2012
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andLiteratureidIsNull() {
			addCriterion("literatureid is null");
			return this;
		}

		public Criteria andLiteratureidIsNotNull() {
			addCriterion("literatureid is not null");
			return this;
		}

		public Criteria andLiteratureidEqualTo(Integer value) {
			addCriterion("literatureid =", value, "literatureid");
			return this;
		}

		public Criteria andLiteratureidNotEqualTo(Integer value) {
			addCriterion("literatureid <>", value, "literatureid");
			return this;
		}

		public Criteria andLiteratureidGreaterThan(Integer value) {
			addCriterion("literatureid >", value, "literatureid");
			return this;
		}

		public Criteria andLiteratureidGreaterThanOrEqualTo(Integer value) {
			addCriterion("literatureid >=", value, "literatureid");
			return this;
		}

		public Criteria andLiteratureidLessThan(Integer value) {
			addCriterion("literatureid <", value, "literatureid");
			return this;
		}

		public Criteria andLiteratureidLessThanOrEqualTo(Integer value) {
			addCriterion("literatureid <=", value, "literatureid");
			return this;
		}

		public Criteria andLiteratureidIn(List values) {
			addCriterion("literatureid in", values, "literatureid");
			return this;
		}

		public Criteria andLiteratureidNotIn(List values) {
			addCriterion("literatureid not in", values, "literatureid");
			return this;
		}

		public Criteria andLiteratureidBetween(Integer value1, Integer value2) {
			addCriterion("literatureid between", value1, value2, "literatureid");
			return this;
		}

		public Criteria andLiteratureidNotBetween(Integer value1, Integer value2) {
			addCriterion("literatureid not between", value1, value2, "literatureid");
			return this;
		}

		public Criteria andBorrowidIsNull() {
			addCriterion("borrowid is null");
			return this;
		}

		public Criteria andBorrowidIsNotNull() {
			addCriterion("borrowid is not null");
			return this;
		}

		public Criteria andBorrowidEqualTo(Integer value) {
			addCriterion("borrowid =", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidNotEqualTo(Integer value) {
			addCriterion("borrowid <>", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidGreaterThan(Integer value) {
			addCriterion("borrowid >", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidGreaterThanOrEqualTo(Integer value) {
			addCriterion("borrowid >=", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidLessThan(Integer value) {
			addCriterion("borrowid <", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidLessThanOrEqualTo(Integer value) {
			addCriterion("borrowid <=", value, "borrowid");
			return this;
		}

		public Criteria andBorrowidIn(List values) {
			addCriterion("borrowid in", values, "borrowid");
			return this;
		}

		public Criteria andBorrowidNotIn(List values) {
			addCriterion("borrowid not in", values, "borrowid");
			return this;
		}

		public Criteria andBorrowidBetween(Integer value1, Integer value2) {
			addCriterion("borrowid between", value1, value2, "borrowid");
			return this;
		}

		public Criteria andBorrowidNotBetween(Integer value1, Integer value2) {
			addCriterion("borrowid not between", value1, value2, "borrowid");
			return this;
		}

		public Criteria andNumIsNull() {
			addCriterion("num is null");
			return this;
		}

		public Criteria andNumIsNotNull() {
			addCriterion("num is not null");
			return this;
		}

		public Criteria andNumEqualTo(Integer value) {
			addCriterion("num =", value, "num");
			return this;
		}

		public Criteria andNumNotEqualTo(Integer value) {
			addCriterion("num <>", value, "num");
			return this;
		}

		public Criteria andNumGreaterThan(Integer value) {
			addCriterion("num >", value, "num");
			return this;
		}

		public Criteria andNumGreaterThanOrEqualTo(Integer value) {
			addCriterion("num >=", value, "num");
			return this;
		}

		public Criteria andNumLessThan(Integer value) {
			addCriterion("num <", value, "num");
			return this;
		}

		public Criteria andNumLessThanOrEqualTo(Integer value) {
			addCriterion("num <=", value, "num");
			return this;
		}

		public Criteria andNumIn(List values) {
			addCriterion("num in", values, "num");
			return this;
		}

		public Criteria andNumNotIn(List values) {
			addCriterion("num not in", values, "num");
			return this;
		}

		public Criteria andNumBetween(Integer value1, Integer value2) {
			addCriterion("num between", value1, value2, "num");
			return this;
		}

		public Criteria andNumNotBetween(Integer value1, Integer value2) {
			addCriterion("num not between", value1, value2, "num");
			return this;
		}

		public Criteria andReturnedIsNull() {
			addCriterion("returned is null");
			return this;
		}

		public Criteria andReturnedIsNotNull() {
			addCriterion("returned is not null");
			return this;
		}

		public Criteria andReturnedEqualTo(Short value) {
			addCriterion("returned =", value, "returned");
			return this;
		}

		public Criteria andReturnedNotEqualTo(Short value) {
			addCriterion("returned <>", value, "returned");
			return this;
		}

		public Criteria andReturnedGreaterThan(Short value) {
			addCriterion("returned >", value, "returned");
			return this;
		}

		public Criteria andReturnedGreaterThanOrEqualTo(Short value) {
			addCriterion("returned >=", value, "returned");
			return this;
		}

		public Criteria andReturnedLessThan(Short value) {
			addCriterion("returned <", value, "returned");
			return this;
		}

		public Criteria andReturnedLessThanOrEqualTo(Short value) {
			addCriterion("returned <=", value, "returned");
			return this;
		}

		public Criteria andReturnedIn(List values) {
			addCriterion("returned in", values, "returned");
			return this;
		}

		public Criteria andReturnedNotIn(List values) {
			addCriterion("returned not in", values, "returned");
			return this;
		}

		public Criteria andReturnedBetween(Short value1, Short value2) {
			addCriterion("returned between", value1, value2, "returned");
			return this;
		}

		public Criteria andReturnedNotBetween(Short value1, Short value2) {
			addCriterion("returned not between", value1, value2, "returned");
			return this;
		}

		public Criteria andReturntimeIsNull() {
			addCriterion("returnTime is null");
			return this;
		}

		public Criteria andReturntimeIsNotNull() {
			addCriterion("returnTime is not null");
			return this;
		}

		public Criteria andReturntimeEqualTo(Date value) {
			addCriterion("returnTime =", value, "returntime");
			return this;
		}

		public Criteria andReturntimeNotEqualTo(Date value) {
			addCriterion("returnTime <>", value, "returntime");
			return this;
		}

		public Criteria andReturntimeGreaterThan(Date value) {
			addCriterion("returnTime >", value, "returntime");
			return this;
		}

		public Criteria andReturntimeGreaterThanOrEqualTo(Date value) {
			addCriterion("returnTime >=", value, "returntime");
			return this;
		}

		public Criteria andReturntimeLessThan(Date value) {
			addCriterion("returnTime <", value, "returntime");
			return this;
		}

		public Criteria andReturntimeLessThanOrEqualTo(Date value) {
			addCriterion("returnTime <=", value, "returntime");
			return this;
		}

		public Criteria andReturntimeIn(List values) {
			addCriterion("returnTime in", values, "returntime");
			return this;
		}

		public Criteria andReturntimeNotIn(List values) {
			addCriterion("returnTime not in", values, "returntime");
			return this;
		}

		public Criteria andReturntimeBetween(Date value1, Date value2) {
			addCriterion("returnTime between", value1, value2, "returntime");
			return this;
		}

		public Criteria andReturntimeNotBetween(Date value1, Date value2) {
			addCriterion("returnTime not between", value1, value2, "returntime");
			return this;
		}
	}
}