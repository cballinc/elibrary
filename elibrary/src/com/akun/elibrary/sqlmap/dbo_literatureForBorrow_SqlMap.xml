<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="dbo_literatureForBorrow">
  <resultMap class="com.akun.elibrary.bean.Literatureforborrow" id="ibatorgenerated_BaseResultMap">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    <result column="literatureid" jdbcType="INTEGER" property="literatureid" />
    <result column="borrowid" jdbcType="INTEGER" property="borrowid" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="returned" jdbcType="SMALLINT" property="returned" />
    <result column="returnTime" jdbcType="TIMESTAMP" property="returntime" />
  </resultMap>
  <!--5表联合查询========================================================================-->
  <resultMap id="borrowList" class="com.akun.elibrary.bean.Literatureforborrow">
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="returned" jdbcType="SMALLINT" property="returned" />
    <result column="returnTime" jdbcType="TIMESTAMP" property="returntime" />
    <!--添加的属性，bean中也相应设置-->
     <result column="literatureid" jdbcType="INTEGER" property="literatureid" />
     <result column="literatureName" jdbcType="VARCHAR" property="literaturename" />
     <result column="borrowid" jdbcType="INTEGER" property="borrowid" />
     <result column="totalnum" jdbcType="INTEGER" property="totalnum"/>
     <result column="categoryName" jdbcType="VARCHAR" property="categoryname" />
     <result column="sname" jdbcType="VARCHAR" property="sname" />
     <result column="snumber" jdbcType="VARCHAR" property="snumber" />
     <result column="borrowTime" jdbcType="TIMESTAMP" property="borrowtime" />
     <result column="expectedReturnTime" jdbcType="TIMESTAMP" property="expectedreturntime" />
     <result column="lindex" jdbcType="VARCHAR" property="lindex" />
  </resultMap>
  <!--5表联合查询borrowlistByName========================================================================-->
  <resultMap id="borrowListByName" class="com.akun.elibrary.bean.Literatureforborrow">
     <result column="outnum" jdbcType="INTEGER" property="outnum" />
    <!--添加的属性，bean中也相应设置-->
     <result column="literatureName" jdbcType="VARCHAR" property="literaturename" />
     <result column="categoryName" jdbcType="VARCHAR" property="categoryname" />
     <result column="totalnum" jdbcType="INTEGER" property="totalnum"/>
  </resultMap>
  <!--5表联合查询borrowlistByCategory========================================================================-->
  <resultMap id="borrowListByCategory" class="com.akun.elibrary.bean.Literatureforborrow">
     <result column="outnum" jdbcType="INTEGER" property="outnum" />
    <!--添加的属性，bean中也相应设置-->
     <result column="literatureName" jdbcType="VARCHAR" property="literaturename" />
     <result column="categoryName" jdbcType="VARCHAR" property="categoryname" />
     <result column="totalnum" jdbcType="INTEGER" property="totalnum"/>
     <result column="categoryid" jdbcType="INTEGER" property="categoryid" />
  </resultMap>
  <!--5表联合查询borrowListBySnumber========================================================================-->
  <resultMap id="borrowListBySnumber" class="com.akun.elibrary.bean.Literatureforborrow">
    <result column="num" jdbcType="INTEGER" property="num" />
    <!--添加的属性，bean中也相应设置-->
     <result column="literatureName" jdbcType="VARCHAR" property="literaturename" />
     <result column="categoryName" jdbcType="VARCHAR" property="categoryname" />
     <result column="borrowTime" jdbcType="TIMESTAMP" property="borrowtime" />
     <result column="expectedReturnTime" jdbcType="TIMESTAMP" property="expectedreturntime" />
     <result column="lindex" jdbcType="VARCHAR" property="lindex" />
     <result column="borrowid" jdbcType="INTEGER" property="borrowid" />
  </resultMap>
  <select id="getBorrowList" parameterClass="java.lang.String" resultMap="borrowList">
  	select category.categoryName,literature.literatureName,literature.num as totalnum,literatureForBorrow.num,student.snumber,student.sname,borrowInfo.borrowTime,borrowInfo.expectedReturnTime,literatureForBorrow.returned,literatureForBorrow.returnTime,borrowInfo.borrowid,literature.lindex,literature.literatureid
 from (((category inner join literature on category.categoryid = literature.categoryid)
inner join literatureForBorrow on literatureForBorrow.literatureid = literature.literatureid)
inner join borrowInfo on borrowInfo.borrowid = literatureForBorrow.borrowid)
inner join student on student.sid = borrowInfo.sid
  	<isNotEmpty prepend="where">
       student.snumber like '%$value$%'
    </isNotEmpty>  	
    order by borrowInfo.borrowTime desc
  </select>
  <select id="getBorrowListNotReturned" parameterClass="java.lang.String" resultMap="borrowList">
  	select category.categoryName,literature.literatureName,literature.num as totalnum,literatureForBorrow.num,student.snumber,student.sname,borrowInfo.borrowTime,borrowInfo.expectedReturnTime,literatureForBorrow.returned,literatureForBorrow.returnTime,borrowInfo.borrowid,literature.lindex,literature.literatureid
 from (((category inner join literature on category.categoryid = literature.categoryid)
inner join literatureForBorrow on literatureForBorrow.literatureid = literature.literatureid)
inner join borrowInfo on borrowInfo.borrowid = literatureForBorrow.borrowid)
inner join student on student.sid = borrowInfo.sid where literatureForBorrow.returned=0
    order by borrowInfo.borrowTime desc
  </select>
  <select id="getBorrowListByName" parameterClass="java.lang.String" resultMap="borrowListByName">
  	select category.categoryName,literature.literatureName,literature.num as totalnum,SUM(literatureForBorrow.num)as outnum
 from (((category inner join literature on category.categoryid = literature.categoryid)
inner join literatureForBorrow on literatureForBorrow.literatureid = literature.literatureid)
inner join borrowInfo on borrowInfo.borrowid = literatureForBorrow.borrowid)
inner join student on student.sid = borrowInfo.sid where literatureForBorrow.returned=0
group by category.categoryName,literature.literatureName,literature.num,literature.literatureid
  	<isNotEmpty prepend="having">
       literature.literatureid = '$value$'
    </isNotEmpty>  	
  </select>
  <select id="getBorrowListByGroup" parameterClass="java.lang.String" resultMap="borrowListByCategory">
  	select category.categoryName,literature.literatureName,literature.num as totalnum,SUM(literatureForBorrow.num)as outnum,category.categoryid
 from (((category inner join literature on category.categoryid = literature.categoryid)
inner join literatureForBorrow on literatureForBorrow.literatureid = literature.literatureid)
inner join borrowInfo on borrowInfo.borrowid = literatureForBorrow.borrowid)
inner join student on student.sid = borrowInfo.sid where literatureForBorrow.returned=0 group by category.categoryName,literature.literatureName,literature.num,literature.literatureid,category.categoryid
  	<isNotEmpty prepend="having">
       literature.literaturename like '%$value$%'
    </isNotEmpty>  	
  </select>
  <select id="getBorrowListByCategory" parameterClass="java.lang.String" resultMap="borrowListByCategory">
  	select category.categoryName,literature.literatureName,literature.num as totalnum,SUM(literatureForBorrow.num)as outnum,category.categoryid
 from (((category inner join literature on category.categoryid = literature.categoryid)
inner join literatureForBorrow on literatureForBorrow.literatureid = literature.literatureid)
inner join borrowInfo on borrowInfo.borrowid = literatureForBorrow.borrowid)
inner join student on student.sid = borrowInfo.sid where literatureForBorrow.returned=0 group by category.categoryName,literature.literatureName,literature.num,literature.literatureid,category.categoryid
  	<isNotEmpty prepend="having">
       category.categoryid = '$value$'
    </isNotEmpty>  	
  </select>
  <select id="getBorrowListBySnumber" parameterClass="java.lang.String" resultMap="borrowListBySnumber">
 	select category.categoryName,literature.literatureName,literatureForBorrow.num,borrowInfo.borrowTime,borrowInfo.expectedReturnTime,literature.lindex,borrowInfo.borrowid
 from (((category inner join literature on category.categoryid = literature.categoryid)
inner join literatureForBorrow on literatureForBorrow.literatureid = literature.literatureid)
inner join borrowInfo on borrowInfo.borrowid = literatureForBorrow.borrowid)
inner join student on student.sid = borrowInfo.sid 
  	<isNotEmpty prepend="where">
       student.snumber = '$value$' and literatureForBorrow.returned=0
    </isNotEmpty>  	
  </select>
  
  <select id="getBorrowListCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
  	select count(*)
 from (((category inner join literature on category.categoryid = literature.categoryid)
inner join literatureForBorrow on literatureForBorrow.literatureid = literature.literatureid)
inner join borrowInfo on borrowInfo.borrowid = literatureForBorrow.borrowid)
inner join student on student.sid = borrowInfo.sid
  	<isNotEmpty prepend="where">
       student.snumber like '%$value$%' 
    </isNotEmpty>  	
  </select>
  
  
  
  <sql id="ibatorgenerated_Example_Where_Clause">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" parameterClass="com.akun.elibrary.bean.LiteratureforborrowExample" resultMap="ibatorgenerated_BaseResultMap">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    select literatureid, borrowid, num, returned, returnTime
    from dbo.literatureForBorrow
    <isParameterPresent>
      <include refid="dbo_literatureForBorrow.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" parameterClass="com.akun.elibrary.bean.LiteratureforborrowKey" resultMap="ibatorgenerated_BaseResultMap">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    select literatureid, borrowid, num, returned, returnTime
    from dbo.literatureForBorrow
    where literatureid = #literatureid:INTEGER#
      and borrowid = #borrowid:INTEGER#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.akun.elibrary.bean.LiteratureforborrowKey">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    delete from dbo.literatureForBorrow
    where literatureid = #literatureid:INTEGER#
      and borrowid = #borrowid:INTEGER#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.akun.elibrary.bean.LiteratureforborrowExample">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    delete from dbo.literatureForBorrow
    <include refid="dbo_literatureForBorrow.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.akun.elibrary.bean.Literatureforborrow">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    insert into dbo.literatureForBorrow (literatureid, borrowid, num, returned, returnTime)
    values (#literatureid:INTEGER#, #borrowid:INTEGER#, #num:INTEGER#, #returned:SMALLINT#,
      #returntime:TIMESTAMP#)
  </insert>
  <insert id="ibatorgenerated_insertSelective" parameterClass="com.akun.elibrary.bean.Literatureforborrow">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    insert into dbo.literatureForBorrow
    <dynamic prepend="(">
      <isNotNull prepend="," property="literatureid">
        literatureid
      </isNotNull>
      <isNotNull prepend="," property="borrowid">
        borrowid
      </isNotNull>
      <isNotNull prepend="," property="num">
        num
      </isNotNull>
      <isNotNull prepend="," property="returned">
        returned
      </isNotNull>
      <isNotNull prepend="," property="returntime">
        returnTime
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(">
      <isNotNull prepend="," property="literatureid">
        #literatureid:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="borrowid">
        #borrowid:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="num">
        #num:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="returned">
        #returned:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="returntime">
        #returntime:TIMESTAMP#
      </isNotNull>
      )
    </dynamic>
  </insert>
  <select id="ibatorgenerated_countByExample" parameterClass="com.akun.elibrary.bean.LiteratureforborrowExample" resultClass="java.lang.Integer">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    select count(*) from dbo.literatureForBorrow
    <include refid="dbo_literatureForBorrow.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    update dbo.literatureForBorrow
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.literatureid">
        literatureid = #record.literatureid:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.borrowid">
        borrowid = #record.borrowid:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.num">
        num = #record.num:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.returned">
        returned = #record.returned:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="record.returntime">
        returnTime = #record.returntime:TIMESTAMP#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="dbo_literatureForBorrow.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    update dbo.literatureForBorrow
    set literatureid = #record.literatureid:INTEGER#,
      borrowid = #record.borrowid:INTEGER#,
      num = #record.num:INTEGER#,
      returned = #record.returned:SMALLINT#,
      returnTime = #record.returntime:TIMESTAMP#
    <isParameterPresent>
      <include refid="dbo_literatureForBorrow.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByPrimaryKeySelective" parameterClass="com.akun.elibrary.bean.Literatureforborrow">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    update dbo.literatureForBorrow
    <dynamic prepend="set">
      <isNotNull prepend="," property="num">
        num = #num:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="returned">
        returned = #returned:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="returntime">
        returnTime = #returntime:TIMESTAMP#
      </isNotNull>
    </dynamic>
    where literatureid = #literatureid:INTEGER#
      and borrowid = #borrowid:INTEGER#
  </update>
  <update id="ibatorgenerated_updateByPrimaryKey" parameterClass="com.akun.elibrary.bean.Literatureforborrow">
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Thu Apr 05 15:26:19 CST 2012.
    -->
    update dbo.literatureForBorrow
    set num = #num:INTEGER#,
      returned = #returned:SMALLINT#,
      returnTime = #returntime:TIMESTAMP#
    where literatureid = #literatureid:INTEGER#
      and borrowid = #borrowid:INTEGER#
  </update>
</sqlMap>